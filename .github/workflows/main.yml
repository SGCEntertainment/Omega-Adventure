name: Build project

on: workflow_dispatch

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:

  #sendTelegramNotify:
     #needs: [Deploy_APK, Deploy_AAB]
     #name: Send Telegram Notify
     #runs-on: ubuntu-latest
     #steps:
     
          #- name: Checkout code
            #uses: actions/checkout@v2
     
          #- uses: actions/download-artifact@v2
            #with:
              #name: build-Android
              #path: ${{ github.workspace }}/build/Android

          #- name: send telegram message
            #uses: appleboy/telegram-action@master
            #with:
              #to: ${{ secrets.TELEGRAM_ID }}
              #token: ${{ secrets.TELEGRAM_TOKEN }}
              #message: Файлы загружены на диск (${{ secrets.APP_NAME }})

  buildWindows:
    name: Build for StandaloneWindows64
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2
        
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard
          
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
          
      - uses: game-ci/unity-builder@v2.0.4
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          
      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64
